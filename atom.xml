<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr·Sun</title>
  
  <subtitle>A Promising Young Man</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://magnificentsun.github.io/blog/"/>
  <updated>2019-05-16T09:32:42.840Z</updated>
  <id>https://magnificentsun.github.io/blog/</id>
  
  <author>
    <name>JunJie|孙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用FileReader和FormData实现图片预览和上传</title>
    <link href="https://magnificentsun.github.io/blog/2019/05/16/%E5%88%A9%E7%94%A8FileReader%E5%92%8CFormData%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E5%92%8C%E4%B8%8A%E4%BC%A0/"/>
    <id>https://magnificentsun.github.io/blog/2019/05/16/利用FileReader和FormData实现图片预览和上传/</id>
    <published>2019-05-16T08:24:14.000Z</published>
    <updated>2019-05-16T09:32:42.840Z</updated>
    
    <content type="html"><![CDATA[<h3 id="图片预览上传需求，过去都是客户端上传给后端，后端返回-url-前端进行预览。现在可以依赖-FileReader-和-FormData-这两个对象和-JavaScript-处理二进制的能力。"><a href="#图片预览上传需求，过去都是客户端上传给后端，后端返回-url-前端进行预览。现在可以依赖-FileReader-和-FormData-这两个对象和-JavaScript-处理二进制的能力。" class="headerlink" title="图片预览上传需求，过去都是客户端上传给后端，后端返回 url 前端进行预览。现在可以依赖 FileReader 和 FormData 这两个对象和 JavaScript 处理二进制的能力。"></a>图片预览上传需求，过去都是客户端上传给后端，后端返回 url 前端进行预览。现在可以依赖 FileReader 和 FormData 这两个对象和 JavaScript 处理二进制的能力。</h3><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader" target="_blank" rel="noopener">FileReader</a> 文件阅读器<br><a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData" target="_blank" rel="noopener">FormData</a> 表格数据<br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noopener">二进制流</a>  </p></blockquote><h3 id="壹、监听表单文件"><a href="#壹、监听表单文件" class="headerlink" title="壹、监听表单文件"></a>壹、监听表单文件</h3><p><code>&lt;input type=&quot;file&quot;&gt;</code></p><p><code>input.on.(&#39;change&#39;, preview);</code></p><a id="more"></a> <h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>预览使用 FileReader 对象来读：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">preview</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = e.target.files[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line"> </span><br><span class="line">    reader.onloadend = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 图片的 base64 格式, 可以直接当成 img 的 src 属性值</span></span><br><span class="line">        <span class="keyword">var</span> dataURL = reader.result;</span><br><span class="line">        <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">        img.src = dataURL;</span><br><span class="line">        <span class="comment">// 插入到 DOM 中预览</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    reader.readAsDataURL(file); <span class="comment">// 读出 base64</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="贰、提交图片文件（二进制文件-非-base64）"><a href="#贰、提交图片文件（二进制文件-非-base64）" class="headerlink" title="贰、提交图片文件（二进制文件 非 base64）"></a>贰、提交图片文件（二进制文件 非 base64）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * dataURL to blob, ref to https://gist.github.com/fupslot/5015897</span></span><br><span class="line"><span class="comment"> * @param dataURI</span></span><br><span class="line"><span class="comment"> * @returns &#123;Blob&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dataURItoBlob</span>(<span class="params">dataURI</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> byteString = atob(dataURI.split(<span class="string">','</span>)[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">var</span> mimeString = dataURI.split(<span class="string">','</span>)[<span class="number">0</span>].split(<span class="string">':'</span>)[<span class="number">1</span>].split(<span class="string">';'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> ab = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(byteString.length);</span><br><span class="line">    <span class="keyword">var</span> ia = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(ab);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; byteString.length; i++) &#123;</span><br><span class="line">        ia[i] = byteString.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Blob([ab], &#123;<span class="attr">type</span>: mimeString&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font face="黑体" color="red">base64转二进制文件</font><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * dataURL to blob, ref to https://gist.github.com/fupslot/5015897</span></span><br><span class="line"><span class="comment"> * @param dataURI</span></span><br><span class="line"><span class="comment"> * @returns &#123;Blob&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dataURItoBlob</span>(<span class="params">dataURI</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> byteString = atob(dataURI.split(<span class="string">','</span>)[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">var</span> mimeString = dataURI.split(<span class="string">','</span>)[<span class="number">0</span>].split(<span class="string">':'</span>)[<span class="number">1</span>].split(<span class="string">';'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> ab = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(byteString.length);</span><br><span class="line">    <span class="keyword">var</span> ia = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(ab);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; byteString.length; i++) &#123;</span><br><span class="line">        ia[i] = byteString.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Blob([ab], &#123;<span class="attr">type</span>: mimeString&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="叁、构造-FormData-填充二进制文件数据，通过-ajax-的方式进行提交："><a href="#叁、构造-FormData-填充二进制文件数据，通过-ajax-的方式进行提交：" class="headerlink" title="叁、构造 FormData 填充二进制文件数据，通过 ajax 的方式进行提交："></a>叁、构造 FormData 填充二进制文件数据，通过 ajax 的方式进行提交：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fd = <span class="keyword">new</span> FormData();</span><br><span class="line"><span class="keyword">var</span> blob = dataURItoBlob(dataURL);</span><br><span class="line">fd.append(<span class="string">'file'</span>, blob);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    url: <span class="string">'/upload'</span>,</span><br><span class="line">    data: fd,</span><br><span class="line">    processData: <span class="literal">false</span>, <span class="comment">// 不会将 data 参数序列化字符串</span></span><br><span class="line">    contentType: <span class="literal">false</span>, <span class="comment">// 根据表单 input 提交的数据使用其默认的 contentType</span></span><br><span class="line">    xhr: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="built_in">window</span>.XMLHttpRequest();</span><br><span class="line">        xhr.upload.addEventListener(<span class="string">"progress"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (evt.lengthComputable) &#123;</span><br><span class="line">                <span class="keyword">var</span> percentComplete = evt.loaded / evt.total;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'进度'</span>, percentComplete);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="literal">false</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> xhr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).success(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 拿到提交的结果</span></span><br><span class="line">&#125;).error(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><font color="red" size="3">注意还有图片 压缩！！！ 利用canvas</font></p><ul><li>在 new 出来的 Image 对象，我们监听它的 onload 事件</li><li>按照压缩比例，算出压缩后的图片尺寸</li><li>创建 canvas ，尺寸设置成上一步骤算出来的压缩后的图片尺寸</li><li>调用 drawImage 方法，把图片绘制到 canvas 中</li><li>调用 canvas 的 toDataURL ，取出 base64 格式的数据</li><li>后续的传图步骤和上面的原图上传一样<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line"> </span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当图片宽度超过 400px 时, 就压缩成 400px, 高度按比例计算</span></span><br><span class="line">    <span class="comment">// 压缩质量可以根据实际情况调整</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="built_in">Math</span>.min(<span class="number">400</span>, img.width);</span><br><span class="line">    <span class="keyword">var</span> h = img.height * (w / img.width);</span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 设置 canvas 的宽度和高度</span></span><br><span class="line">    canvas.width = w;</span><br><span class="line">    canvas.height = h;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 把图片绘制到 canvas 中</span></span><br><span class="line">    ctx.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 取出 base64 格式数据</span></span><br><span class="line">    <span class="keyword">var</span> dataURL = canvas.toDataURL(<span class="string">'image/png'</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">img.src = reader.result;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;图片预览上传需求，过去都是客户端上传给后端，后端返回-url-前端进行预览。现在可以依赖-FileReader-和-FormData-这两个对象和-JavaScript-处理二进制的能力。&quot;&gt;&lt;a href=&quot;#图片预览上传需求，过去都是客户端上传给后端，后端返回-url-前端进行预览。现在可以依赖-FileReader-和-FormData-这两个对象和-JavaScript-处理二进制的能力。&quot; class=&quot;headerlink&quot; title=&quot;图片预览上传需求，过去都是客户端上传给后端，后端返回 url 前端进行预览。现在可以依赖 FileReader 和 FormData 这两个对象和 JavaScript 处理二进制的能力。&quot;&gt;&lt;/a&gt;图片预览上传需求，过去都是客户端上传给后端，后端返回 url 前端进行预览。现在可以依赖 FileReader 和 FormData 这两个对象和 JavaScript 处理二进制的能力。&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileReader&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FileReader&lt;/a&gt; 文件阅读器&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FormData&lt;/a&gt; 表格数据&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;二进制流&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;壹、监听表单文件&quot;&gt;&lt;a href=&quot;#壹、监听表单文件&quot; class=&quot;headerlink&quot; title=&quot;壹、监听表单文件&quot;&gt;&lt;/a&gt;壹、监听表单文件&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;input.on.(&amp;#39;change&amp;#39;, preview);&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://magnificentsun.github.io/blog/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JQuery基础</title>
    <link href="https://magnificentsun.github.io/blog/2019/05/16/JQuery-%E6%95%B4%E7%90%86/"/>
    <id>https://magnificentsun.github.io/blog/2019/05/16/JQuery-整理/</id>
    <published>2019-05-16T06:46:53.000Z</published>
    <updated>2019-05-16T07:57:26.471Z</updated>
    
    <content type="html"><![CDATA[<h3 id="个人理解：-JQ就是JS各种东西的封装-俗话说你觉得麻烦的东西都已经有人帮你做了-噢耶"><a href="#个人理解：-JQ就是JS各种东西的封装-俗话说你觉得麻烦的东西都已经有人帮你做了-噢耶" class="headerlink" title="个人理解：  JQ就是JS各种东西的封装 俗话说你觉得麻烦的东西都已经有人帮你做了 噢耶~"></a>个人理解：  JQ就是JS各种东西的封装 俗话说你觉得麻烦的东西都已经有人帮你做了 噢耶~</h3><blockquote><p>有两种方法使用<br>第一种：引CDN<br>第二种：下载文件，页面引用</p></blockquote><h3 id="壹、送上DNS地址"><a href="#壹、送上DNS地址" class="headerlink" title="壹、送上DNS地址"></a>壹、送上DNS地址</h3><ul><li><h3 id="新浪"><a href="#新浪" class="headerlink" title="新浪"></a>新浪</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a> <ul><li><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure></li><li><h3 id="Google-CDN"><a href="#Google-CDN" class="headerlink" title="Google CDN"></a>Google CDN</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure></li><li><h3 id="Microsoft-CDN"><a href="#Microsoft-CDN" class="headerlink" title="Microsoft CDN"></a>Microsoft CDN</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="贰、-JS-和-JQ-的入口函数的不同"><a href="#贰、-JS-和-JQ-的入口函数的不同" class="headerlink" title="贰、 JS 和 JQ 的入口函数的不同"></a>贰、 JS 和 JQ 的入口函数的不同</h3><p>JQ入口函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 执行代码</span></span><br><span class="line">&#125;);</span><br><span class="line">或者</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 执行代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>JS 入口函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>&nbsp;</th><th>window.onload</th><th>$(document).ready </th></tr></thead><tbody><tr><td>执行时机</td><td>　必须等待网页全部加载完毕（包括图片等），然后再执行包裹代码</td><td>只需要等待网页中的DOM结构加载完毕，就能执行包裹的代码</td></tr><tr><td>执行次数</td><td>只能执行一次，如果第二次，那么第一次的执行会被覆盖</td><td>可以执行多次，第N次都不会覆盖上一次</td></tr><tr><td>简写方案</td><td>无</td><td><code>$(function(){});</code></td></tr></tbody></table><h3 id="叁、JQ的事件"><a href="#叁、JQ的事件" class="headerlink" title="叁、JQ的事件"></a>叁、JQ的事件</h3><h4 id="一个实例"><a href="#一个实例" class="headerlink" title="一个实例"></a>一个实例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只允许按下的字母键生效, 65~90是所有小写字母的键盘代码范围</span></span><br><span class="line"><span class="keyword">var</span> validKeys = &#123; <span class="attr">start</span>: <span class="number">65</span>, <span class="attr">end</span>: <span class="number">90</span>  &#125;;</span><br><span class="line">$(<span class="string">"#keys"</span>).keydown( validKeys, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> keys = event.data;  <span class="comment">//拿到validKeys对象.</span></span><br><span class="line">    <span class="keyword">return</span> event.which &gt;= keys.start &amp;&amp; event.which &lt;= keys.end;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><ul><li>1.keydown：在键盘上按下某键时发生,一直按着则会不断触发（opera浏览器除外）, 它返回的是键盘代码;</li><li>2.keypress：在键盘上按下一个按键，并产生一个字符时发生, 返回ASCII码。注意: shift、alt、ctrl等键按下并不会产生字符，所以监听无效 ,换句话说, 只有按下能在屏幕上输出字符的按键时keypress事件才会触发。若一直按着某按键则会不断触发。</li><li><p>3.keyup：用户松开某一个按键时触发, 与keydown相对, 返回键盘代码.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取按键代码或字符的ASCII码</span></span><br><span class="line">$(<span class="built_in">window</span>).keydown( <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">   <span class="comment">// 通过event.which可以拿到按键代码.  如果是keypress事件中,则拿到ASCII码.</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></li><li><p>4.获取事件对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">window</span>).keypress(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;    </span><br><span class="line">        <span class="comment">//获取事件对象，里面包含各种有用的信息。</span></span><br><span class="line">        <span class="built_in">console</span>.log(event);</span><br><span class="line">        <span class="comment">//console.log(event.which);</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>5.keypress事件获取键入字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).keypress(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//event.which是获取ASCII码，前面的函数是将ASCII码转换成字符，空格键和Enter键输出均为空白。</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">String</span>.fromCharCode(event.which));</span><br><span class="line">    <span class="comment">//从event对象中key属性获取字符，但是Enter键的key值为"Enter"，空白键还是空白" "。</span></span><br><span class="line">    <span class="built_in">console</span>.log(event.key);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="肆、选择器（这个就不多说了，有点css基础就能看懂）"><a href="#肆、选择器（这个就不多说了，有点css基础就能看懂）" class="headerlink" title="肆、选择器（这个就不多说了，有点css基础就能看懂）"></a>肆、选择器（这个就不多说了，有点css基础就能看懂）</h3><h3 id="不信你点开看看"><a href="#不信你点开看看" class="headerlink" title="不信你点开看看"></a><a href="https://www.runoob.com/jquery/jquery-selectors.html" target="_blank" rel="noopener">不信你点开看看</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;个人理解：-JQ就是JS各种东西的封装-俗话说你觉得麻烦的东西都已经有人帮你做了-噢耶&quot;&gt;&lt;a href=&quot;#个人理解：-JQ就是JS各种东西的封装-俗话说你觉得麻烦的东西都已经有人帮你做了-噢耶&quot; class=&quot;headerlink&quot; title=&quot;个人理解：  JQ就是JS各种东西的封装 俗话说你觉得麻烦的东西都已经有人帮你做了 噢耶~&quot;&gt;&lt;/a&gt;个人理解：  JQ就是JS各种东西的封装 俗话说你觉得麻烦的东西都已经有人帮你做了 噢耶~&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有两种方法使用&lt;br&gt;第一种：引CDN&lt;br&gt;第二种：下载文件，页面引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;壹、送上DNS地址&quot;&gt;&lt;a href=&quot;#壹、送上DNS地址&quot; class=&quot;headerlink&quot; title=&quot;壹、送上DNS地址&quot;&gt;&lt;/a&gt;壹、送上DNS地址&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;新浪&quot;&gt;&lt;a href=&quot;#新浪&quot; class=&quot;headerlink&quot; title=&quot;新浪&quot;&gt;&lt;/a&gt;新浪&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;&amp;lt;/&lt;/span&gt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JQuery" scheme="https://magnificentsun.github.io/blog/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>下拉指定位置显示隐藏元素</title>
    <link href="https://magnificentsun.github.io/blog/2019/05/14/%E4%B8%8B%E6%8B%89%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0/"/>
    <id>https://magnificentsun.github.io/blog/2019/05/14/下拉指定位置显示隐藏元素/</id>
    <published>2019-05-14T11:59:08.000Z</published>
    <updated>2019-05-14T12:33:27.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="应用于移动端下拉到某个位置，显示某些元素"><a href="#应用于移动端下拉到某个位置，显示某些元素" class="headerlink" title="应用于移动端下拉到某个位置，显示某些元素"></a>应用于移动端下拉到某个位置，显示某些元素</h3><h3 id="壹、HTML部分"><a href="#壹、HTML部分" class="headerlink" title="壹、HTML部分"></a>壹、HTML部分</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"eBtn"</span> <span class="attr">onclick</span>=<span class="string">"eBtnClick()"</span> <span class="attr">class</span>=<span class="string">"e-btn fixed-btn"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="贰、JS部分"><a href="#贰、JS部分" class="headerlink" title="贰、JS部分"></a>贰、JS部分</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 JQ</span></span><br><span class="line">&lt;script src=<span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 绑定滚动条事件</span></span><br><span class="line">    $(<span class="string">"#box"</span>).bind(<span class="string">"scroll"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> sTop = $(<span class="string">"#box"</span>).scrollTop();</span><br><span class="line">      <span class="keyword">var</span> sTop = <span class="built_in">parseInt</span>(sTop);</span><br><span class="line">      <span class="comment">// 设置显示位置</span></span><br><span class="line">      <span class="keyword">if</span> (sTop &gt;= <span class="number">348</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!$(<span class="string">"#eBtn"</span>).is(<span class="string">":visible"</span>)) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            $(<span class="string">"#eBtn"</span>).slideDown();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            $(<span class="string">"#eBtn"</span>).show();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">"执行了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(sTop)</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">"#eBtn"</span>).is(<span class="string">":visible"</span>)) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            $(<span class="string">"#eBtn"</span>).slideUp();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            $(<span class="string">"#eBtn"</span>).hide();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="叁、CSS部分"><a href="#叁、CSS部分" class="headerlink" title="叁、CSS部分"></a>叁、CSS部分</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">   <span class="selector-tag">html</span>,</span><br><span class="line">   <span class="selector-tag">body</span> &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: FZLANTINGHEIPro_04_OPPO--GB1-<span class="number">4</span>, PingFangSC-Regular;</span><br><span class="line">     <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-tag">body</span> &#123;</span><br><span class="line">     <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">     <span class="attribute">margin</span>: auto;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.box</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">overflow</span>: scroll;</span><br><span class="line">     <span class="attribute">-webkit-overflow-scrolling</span>: touch;</span><br><span class="line">     <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.box</span> <span class="selector-class">.e-btn</span> &#123;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">     <span class="attribute">line-height</span>: <span class="number">44px</span>;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">border-radius</span>: <span class="number">7.3333px</span>;</span><br><span class="line">     <span class="attribute">text-align</span>: center;</span><br><span class="line">     <span class="attribute">background</span>: green;</span><br><span class="line">     <span class="attribute">border-color</span>: <span class="number">#66b1ff</span>;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.box</span> <span class="selector-class">.e-btn</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: ColorFont-Medium;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">     <span class="attribute">letter-spacing</span>: <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.box</span> <span class="selector-class">.fixed-btn</span> &#123;</span><br><span class="line">     <span class="attribute">position</span>: fixed;</span><br><span class="line">     <span class="comment">/* width: 86.6666%; */</span></span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">     <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">margin</span>: auto;</span><br><span class="line">     <span class="attribute">bottom</span>: <span class="number">5px</span>;</span><br><span class="line">     <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">     <span class="attribute">border-radius</span>: <span class="number">0px</span>;</span><br><span class="line">     <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">     <span class="attribute">display</span>: none;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.box</span> <span class="selector-class">.son</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">1600px</span>;</span><br><span class="line">     <span class="attribute">background</span>: brown;</span><br><span class="line">   &#125;</span><br><span class="line"> &lt;/style&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="特别提醒"><a href="#特别提醒" class="headerlink" title="特别提醒"></a>特别提醒</h4><p>-webkit-overflow-scrolling:touch是什么？  </p><blockquote><p><code>-webkit-overflow-scrolling</code> 属性控制元素在移动设备上是否使用滚动回弹效果.<br><code>auto</code>: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。<br><code>touch</code>: 使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比。同时也会创建一个新的堆栈上下文。</p></blockquote><p>在移动端上，在你用<code>overflow-y:scorll</code>属性的时候，你会发现滚动的效果很木，很慢，这时候可以使用<code>-webkit-overflow-scrolling:touch</code>这个属性，让滚动条产生滚动回弹的效果，就像ios原生的滚动条一样流畅。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;应用于移动端下拉到某个位置，显示某些元素&quot;&gt;&lt;a href=&quot;#应用于移动端下拉到某个位置，显示某些元素&quot; class=&quot;headerlink&quot; title=&quot;应用于移动端下拉到某个位置，显示某些元素&quot;&gt;&lt;/a&gt;应用于移动端下拉到某个位置，显示某些元素&lt;/h3&gt;&lt;h3 id=&quot;壹、HTML部分&quot;&gt;&lt;a href=&quot;#壹、HTML部分&quot; class=&quot;headerlink&quot; title=&quot;壹、HTML部分&quot;&gt;&lt;/a&gt;壹、HTML部分&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;son&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;eBtn&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;eBtnClick()&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;e-btn fixed-btn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;按钮&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://magnificentsun.github.io/blog/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>关于FormData</title>
    <link href="https://magnificentsun.github.io/blog/2019/05/14/%E5%85%B3%E4%BA%8EFormData/"/>
    <id>https://magnificentsun.github.io/blog/2019/05/14/关于FormData/</id>
    <published>2019-05-14T03:11:02.000Z</published>
    <updated>2019-05-14T12:33:02.398Z</updated>
    
    <content type="html"><![CDATA[<h3 id="FormData的主要用途有两个："><a href="#FormData的主要用途有两个：" class="headerlink" title="FormData的主要用途有两个："></a>FormData的主要用途有两个：</h3><h3 id="1-将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。"><a href="#1-将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。" class="headerlink" title="1. 将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。"></a>1. <strong>将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。</strong></h3><h3 id="2-异步上传文件"><a href="#2-异步上传文件" class="headerlink" title="2. 异步上传文件"></a>2. <strong>异步上传文件</strong></h3><h4 id="壹、创建formData对象"><a href="#壹、创建formData对象" class="headerlink" title="壹、创建formData对象"></a>壹、创建formData对象</h4><p><strong>1. 创建空对象</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过FormData构造函数创建一个空对象</span></span><br><span class="line"><span class="keyword">var</span> formdata=<span class="keyword">new</span> FormData();</span><br><span class="line"><span class="comment">//可以通过append()方法来追加数据</span></span><br><span class="line">formdata.append(<span class="string">"name"</span>,<span class="string">"laotie"</span>);</span><br><span class="line"><span class="comment">//通过get方法对值进行读取</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//laotie</span></span><br><span class="line"><span class="comment">//通过set方法对值进行设置</span></span><br><span class="line">formdata.set(<span class="string">"name"</span>,<span class="string">"laoliu"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//laoliu</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p><strong>2. 通过表单对formData进行初始化</strong><br>创建表单：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"advForm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"advName"</span>  <span class="attr">value</span>=<span class="string">"xixi"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告类别：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"advType"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>轮播图<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>轮播图底部广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>热门回收广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>优品精选广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>通过表单元素作为参数，实现对formData的初始化：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得表单按钮元素</span></span><br><span class="line"><span class="keyword">var</span> btn=<span class="built_in">document</span>.querySelector(<span class="string">"#btn"</span>);</span><br><span class="line"><span class="comment">//为按钮添加点击事件</span></span><br><span class="line">btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//根据ID获得页面当中的form表单元素</span></span><br><span class="line">    <span class="keyword">var</span> form=<span class="built_in">document</span>.querySelector(<span class="string">"#advForm"</span>);</span><br><span class="line">    <span class="comment">//将获得的表单元素作为参数，对formData进行初始化</span></span><br><span class="line">    <span class="keyword">var</span> formdata=<span class="keyword">new</span> FormData(form);</span><br><span class="line">    <span class="comment">//通过get方法获得name为advName元素的value值</span></span><br><span class="line">    <span class="built_in">console</span>.log(formdata.get(<span class="string">"advName"</span>));<span class="comment">//xixi</span></span><br><span class="line">    <span class="comment">//通过get方法获得name为advType元素的value值</span></span><br><span class="line">    <span class="built_in">console</span>.log(formdata.get(<span class="string">"advType"</span>));<span class="comment">//1 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="贰、创建formData对象"><a href="#贰、创建formData对象" class="headerlink" title="贰、创建formData对象"></a>贰、创建formData对象</h5><p><strong>1. 通过get(key)与getAll(key)来获取相对应的值</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取key为age的第一个值</span></span><br><span class="line">formdata.get(<span class="string">"age"</span>); </span><br><span class="line"> <span class="comment">// 获取key为age的所有值，返回值为数组类型</span></span><br><span class="line">formdata.getAll(<span class="string">"age"</span>);</span><br></pre></td></tr></table></figure></p><p><strong>2. 通过append(key,value)在数据末尾追加数据</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过FormData构造函数创建一个空对象</span></span><br><span class="line"><span class="keyword">var</span> formdata=<span class="keyword">new</span> FormData();</span><br><span class="line"><span class="comment">//通过append()方法在末尾追加key为name值为laoliu的数据</span></span><br><span class="line">formdata.append(<span class="string">"name"</span>,<span class="string">"laoliu"</span>);</span><br><span class="line"><span class="comment">//通过append()方法在末尾追加key为name值为laoli的数据</span></span><br><span class="line">formdata.append(<span class="string">"name"</span>,<span class="string">"laoli"</span>);</span><br><span class="line"><span class="comment">//通过append()方法在末尾追加key为name值为laotie的数据</span></span><br><span class="line">formdata.append(<span class="string">"name"</span>,<span class="string">"laotie"</span>);</span><br><span class="line"><span class="comment">//通过get方法读取key为name的第一个值</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//laoliu</span></span><br><span class="line"><span class="comment">//通过getAll方法读取key为name的所有值</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.getAll(<span class="string">"name"</span>));<span class="comment">//["laoliu", "laoli", "laotie"]</span></span><br></pre></td></tr></table></figure></p><p><strong>3. 通过set(key, value)来设置修改数据</strong><br>key的值不存在，会添加一条数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果key的值不存在会为数据添加一个key为name值为laoliu的数据</span></span><br><span class="line">formdata.set(<span class="string">"name"</span>,<span class="string">"laoli"</span>);</span><br><span class="line"><span class="comment">//通过get方法读取key为name的第一个值</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//laoli</span></span><br></pre></td></tr></table></figure></p><p>key的值存在，会修改对应的value值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将存在的key为name的值修改为laoli</span></span><br><span class="line">formdata.set(<span class="string">"name"</span>,<span class="string">"laoli"</span>);</span><br><span class="line"><span class="comment">//通过get方法读取key为name的第一个值</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//laolis</span></span><br><span class="line"><span class="comment">//通过getAll方法读取key为name的所有值</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.getAll(<span class="string">"name"</span>));<span class="comment">//["laoli"]</span></span><br></pre></td></tr></table></figure></p><p><strong>4. 通过has(key)来判断是否存在对应的key值</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否包含key为name的数据</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.has(<span class="string">"name"</span>));<span class="comment">//true</span></span><br><span class="line"><span class="comment">//判断是否包含key为age的数据</span></span><br><span class="line"><span class="built_in">console</span>.log(formdata.has(<span class="string">"age"</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure></p><p><strong>5. 通过delete(key)可以删除数据</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除key为name的值</span></span><br><span class="line">formdata.delete(<span class="string">"name"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(formdata.get(<span class="string">"name"</span>));<span class="comment">//null</span></span><br></pre></td></tr></table></figure></p><h5 id="叁、通过XMLHttpRequest发送数据"><a href="#叁、通过XMLHttpRequest发送数据" class="headerlink" title="叁、通过XMLHttpRequest发送数据"></a>叁、通过XMLHttpRequest发送数据</h5><p><strong>1. 创建表单：</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"advForm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"advName"</span> <span class="attr">value</span>=<span class="string">"xixi"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告类别：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"advType"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>轮播图<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>轮播图底部广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>热门回收广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>优品精选广告<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告图片：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"advPic"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告地址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"advUrl"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>广告排序：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"orderBy"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>2. 发送数据：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn=<span class="built_in">document</span>.querySelector(<span class="string">"#btn"</span>);</span><br><span class="line">btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> formdata=<span class="keyword">new</span> FormData(<span class="built_in">document</span>.getElementById(<span class="string">"advForm"</span>));</span><br><span class="line">    <span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(<span class="string">"post"</span>,<span class="string">"http://127.0.0.1/adv"</span>);</span><br><span class="line">    xhr.send(formdata);</span><br><span class="line">    xhr.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(xhr.status==<span class="number">200</span>)&#123;</span><br><span class="line">            <span class="comment">//...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;FormData的主要用途有两个：&quot;&gt;&lt;a href=&quot;#FormData的主要用途有两个：&quot; class=&quot;headerlink&quot; title=&quot;FormData的主要用途有两个：&quot;&gt;&lt;/a&gt;FormData的主要用途有两个：&lt;/h3&gt;&lt;h3 id=&quot;1-将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。&quot;&gt;&lt;a href=&quot;#1-将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。&quot; class=&quot;headerlink&quot; title=&quot;1. 将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。&quot;&gt;&lt;/a&gt;1. &lt;strong&gt;将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率。&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;2-异步上传文件&quot;&gt;&lt;a href=&quot;#2-异步上传文件&quot; class=&quot;headerlink&quot; title=&quot;2. 异步上传文件&quot;&gt;&lt;/a&gt;2. &lt;strong&gt;异步上传文件&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;壹、创建formData对象&quot;&gt;&lt;a href=&quot;#壹、创建formData对象&quot; class=&quot;headerlink&quot; title=&quot;壹、创建formData对象&quot;&gt;&lt;/a&gt;壹、创建formData对象&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 创建空对象&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过FormData构造函数创建一个空对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; formdata=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FormData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以通过append()方法来追加数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formdata.append(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;laotie&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过get方法对值进行读取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(formdata.get(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//laotie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过set方法对值进行设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formdata.set(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;laoliu&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(formdata.get(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//laoliu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="关于FormData" scheme="https://magnificentsun.github.io/blog/tags/%E5%85%B3%E4%BA%8EFormData/"/>
    
  </entry>
  
  <entry>
    <title>关于MarkDown语法</title>
    <link href="https://magnificentsun.github.io/blog/2019/05/09/%E5%85%B3%E4%BA%8EMarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>https://magnificentsun.github.io/blog/2019/05/09/关于MarkDown语法/</id>
    <published>2019-05-09T12:44:25.000Z</published>
    <updated>2019-05-16T09:23:43.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="壹、标题等级"><a href="#壹、标题等级" class="headerlink" title="壹、标题等级"></a>壹、标题等级</h1><h2 id="标题等级"><a href="#标题等级" class="headerlink" title="标题等级"></a>标题等级</h2><h3 id="标题等级-1"><a href="#标题等级-1" class="headerlink" title="标题等级"></a>标题等级</h3><h4 id="标题等级-2"><a href="#标题等级-2" class="headerlink" title="标题等级"></a>标题等级</h4><h5 id="标题等级-3"><a href="#标题等级-3" class="headerlink" title="标题等级"></a>标题等级</h5><h6 id="标题等级-4"><a href="#标题等级-4" class="headerlink" title="标题等级"></a>标题等级</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">用 星号 “ * ” 区分</span><br><span class="line">在文字前面加几个星号就是几级标题</span><br><span class="line">最多六级</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">### 贰、粗体斜体</span><br><span class="line"></span><br><span class="line">* *斜体*</span><br><span class="line">* **粗体**</span><br><span class="line">* ***粗斜体***</span><br></pre></td></tr></table></figure><ul><li><em>斜体</em></li><li><strong>粗体</strong></li><li><strong><em>粗斜体</em></strong><br>分割线就是 “***” 三个星号即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 叁、列表</span><br><span class="line">1. #### 无序列表</span><br><span class="line">* 一个 * 号，星号后面加空格 显示实心圆</span><br><span class="line">  * 两个空格 再加上一个 * 号 再加一个空格 显示空心圆</span><br></pre></td></tr></table></figure></li></ul><p><em>（一个空格）内容<br>（两个空格）</em>（一个空格）内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. #### 有序列表</span><br></pre></td></tr></table></figure></p><ol><li>内容</li><li>内容</li><li><p>空格<br>数字. 空格 内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3. #### 有序和无序也可以混搭</span><br></pre></td></tr></table></figure></li><li><p>第一级</p></li></ol><ul><li>内容<ul><li>第二级</li><li>内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 肆、引用</span><br><span class="line">&gt; 引用</span><br><span class="line">&gt;&gt; 引用</span><br><span class="line">&gt;&gt;&gt; 引用</span><br></pre></td></tr></table></figure></li></ul></li></ul><blockquote><p>引用</p><blockquote><p>引用</p><blockquote><p>引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 伍、插入链接</span><br><span class="line">1. [这是我github地址！！！](https://github.com/MagnificentSun)</span><br></pre></td></tr></table></figure></p></blockquote></blockquote></blockquote><p><a href="https://github.com/MagnificentSun" target="_blank" rel="noopener">这是我github地址！！！</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. ![这是我的突突突！！！](https://stock.tuchong.com/image?fromSimilarSearch=&amp;imageId=238565135354167627&amp;requestId=4fdb11a581af472fa39b799c1a6072a3&amp;searchId=f7aa7d30041d47d79ad19ae591212212&amp;term=%E7%8B%97)</span><br></pre></td></tr></table></figure></p><p><img src="https://stock.tuchong.com/image?fromSimilarSearch=&amp;imageId=238565135354167627&amp;requestId=4fdb11a581af472fa39b799c1a6072a3&amp;searchId=f7aa7d30041d47d79ad19ae591212212&amp;term=%E7%8B%97" alt="这是我的突突突！！！"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 陆、表格</span><br><span class="line">标题1|标题2|标题3</span><br><span class="line">- | - | -</span><br><span class="line">内容1|内容2|内容3</span><br><span class="line">内容1|内容2|内容3</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>标题1</th><th>标题2</th><th>标题3</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr></tbody></table><p>第二行的<br>—|—|— 有几个标题写几个<br>—|—|—|— 这就是有四个标题<br>—|— 这就是有两个标题<br>而且 - 和 | 之间有无空格以及个数（最少一个）没太大限制 可按自己要求调整<br>比如我的例子那么大的缝<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 一些技巧</span><br><span class="line">&gt; 1.换行： 要换行的地方敲（两个空格）  </span><br><span class="line">2.首行缩进两个字符： &amp;ensp &amp;emsp</span><br><span class="line"></span><br><span class="line">#### 今天用到了MarkDown 的字体颜色才知道原来他是 内嵌 HTML </span><br><span class="line"></span><br><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;  </span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;  </span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;  </span><br><span class="line">&lt;font color=#0099ff size=1 face=&quot;黑体&quot;&gt;color=#0099ff size=7 face=&quot;黑体&quot;&lt;/font&gt;  </span><br><span class="line">&lt;font color=#00ffff size=2&gt;color=#00ffff&lt;/font&gt;  </span><br><span class="line">&lt;font color=gray size=3&gt;color=gray&lt;/font&gt;  </span><br><span class="line">&gt; Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3  </span><br><span class="line"></span><br><span class="line">代码如下</span><br></pre></td></tr></table></figure></p><p><font face="黑体">我是黑体字</font></p><p><font face="微软雅黑">我是微软雅黑</font></p><p><font face="STCAIYUN">我是华文彩云</font></p><p><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font></p><p><font color="#00ffff" size="72">color=#00ffff</font></p><p><font color="gray" size="72">color=gray</font><br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;壹、标题等级&quot;&gt;&lt;a href=&quot;#壹、标题等级&quot; class=&quot;headerlink&quot; title=&quot;壹、标题等级&quot;&gt;&lt;/a&gt;壹、标题等级&lt;/h1&gt;&lt;h2 id=&quot;标题等级&quot;&gt;&lt;a href=&quot;#标题等级&quot; class=&quot;headerlink&quot; title=&quot;标题等级&quot;&gt;&lt;/a&gt;标题等级&lt;/h2&gt;&lt;h3 id=&quot;标题等级-1&quot;&gt;&lt;a href=&quot;#标题等级-1&quot; class=&quot;headerlink&quot; title=&quot;标题等级&quot;&gt;&lt;/a&gt;标题等级&lt;/h3&gt;&lt;h4 id=&quot;标题等级-2&quot;&gt;&lt;a href=&quot;#标题等级-2&quot; class=&quot;headerlink&quot; title=&quot;标题等级&quot;&gt;&lt;/a&gt;标题等级&lt;/h4&gt;&lt;h5 id=&quot;标题等级-3&quot;&gt;&lt;a href=&quot;#标题等级-3&quot; class=&quot;headerlink&quot; title=&quot;标题等级&quot;&gt;&lt;/a&gt;标题等级&lt;/h5&gt;&lt;h6 id=&quot;标题等级-4&quot;&gt;&lt;a href=&quot;#标题等级-4&quot; class=&quot;headerlink&quot; title=&quot;标题等级&quot;&gt;&lt;/a&gt;标题等级&lt;/h6&gt;
    
    </summary>
    
    
      <category term="MarkDown语法" scheme="https://magnificentsun.github.io/blog/tags/MarkDown%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>你好,Mr·Sun！</title>
    <link href="https://magnificentsun.github.io/blog/2019/04/28/%E5%85%B3%E4%BA%8E%E4%BD%A0%E5%A5%BD%20Mr%C2%B7Sun%EF%BC%81/"/>
    <id>https://magnificentsun.github.io/blog/2019/04/28/关于你好 Mr·Sun！/</id>
    <published>2019-04-28T03:32:51.000Z</published>
    <updated>2019-05-14T03:09:25.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一上午的倾情打造"><a href="#一上午的倾情打造" class="headerlink" title="一上午的倾情打造"></a>一上午的倾情打造</h3><blockquote><p>我觉得还是有下划线的标题好看</p><blockquote><p>　所以我就用了<strong>最大</strong></p></blockquote></blockquote><h1 id="但是我觉得密钥代码好长所以给大家分享福利"><a href="#但是我觉得密钥代码好长所以给大家分享福利" class="headerlink" title="但是我觉得密钥代码好长所以给大家分享福利^_^"></a>但是我觉得密钥代码好长所以给大家分享福利^_^</h1><p>检查是否由.ssh的文件夹<br><code>cd ~/.ssh</code>  </p><a id="more"></a><hr><p>输入ls，列出该文件下的内容<br><code>ls</code></p><hr><p>输入ssh-keygen -t rsa -C “<a href="mailto:929762930@qq.com" target="_blank" rel="noopener">929762930@qq.com</a>”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh)<br><code>ssh-keygen -t rsa -C “*****@qq.com”</code></p><hr><p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent<br><code>eval &quot;$(ssh-agent -s)&quot;</code></p><hr><p>再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent<br><code>ssh-add ~/.ssh/id_rsa</code></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进入Github，点击头像下的settings，添加ssh</span><br></pre></td></tr></table></figure><p>收尾</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一上午的倾情打造&quot;&gt;&lt;a href=&quot;#一上午的倾情打造&quot; class=&quot;headerlink&quot; title=&quot;一上午的倾情打造&quot;&gt;&lt;/a&gt;一上午的倾情打造&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我觉得还是有下划线的标题好看&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;　所以我就用了&lt;strong&gt;最大&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;但是我觉得密钥代码好长所以给大家分享福利&quot;&gt;&lt;a href=&quot;#但是我觉得密钥代码好长所以给大家分享福利&quot; class=&quot;headerlink&quot; title=&quot;但是我觉得密钥代码好长所以给大家分享福利^_^&quot;&gt;&lt;/a&gt;但是我觉得密钥代码好长所以给大家分享福利^_^&lt;/h1&gt;&lt;p&gt;检查是否由.ssh的文件夹&lt;br&gt;&lt;code&gt;cd ~/.ssh&lt;/code&gt;  &lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="https://magnificentsun.github.io/blog/tags/github/"/>
    
      <category term="hexo" scheme="https://magnificentsun.github.io/blog/tags/hexo/"/>
    
      <category term="npm" scheme="https://magnificentsun.github.io/blog/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>关于Token的理解</title>
    <link href="https://magnificentsun.github.io/blog/2019/04/28/%E5%85%B3%E4%BA%8EToken/"/>
    <id>https://magnificentsun.github.io/blog/2019/04/28/关于Token/</id>
    <published>2019-04-28T03:32:51.000Z</published>
    <updated>2019-05-14T03:09:08.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-首先，先了解一下request和session的区别"><a href="#1-首先，先了解一下request和session的区别" class="headerlink" title="1. 首先，先了解一下request和session的区别"></a>1. 首先，先了解一下request和session的区别</h3><hr><p>request 指在一次请求的全过程中有效，即从http请求到服务器处理结束，返回响应的整个过程，存放在HttpServletRequest对象中。在这个过程中可以使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量。request是用户请求访问的当前组件，以及和当前web组件共享同一用户请求的web组件。如：被请求的jsp页面和该页面用<include>指令包含的页面以及<forward>标记包含的其它jsp页面；<br>Session是用户全局变量，在整个会话期间都有效。只要页面不关闭就一直有效（或者直到用户一直未活动导致会话过期，默认session过期时间为30分钟，或调用HttpSession的invalidate()方法）。存放在HttpSession对象中 ，同一个http会话中的web组件共享它。</forward></include></p><h3 id="2-token主要有两个作用"><a href="#2-token主要有两个作用" class="headerlink" title="2. token主要有两个作用:"></a>2. token主要有两个作用:</h3><hr><p>①:防止表单重复提交(防止表单重复提交一般还是使用前后端都限制的方式，比如：在前端点击提交之后，将按钮置为灰色，不可再次点击，然后客户端和服务端的token各自独立存储，客户端存储在Cookie或者Form的隐藏域（放在Form隐藏域中的时候，需要每个表单）中，服务端存储在Session（单机系统中可以使用）或者其他缓存系统（分布式系统可以使用）中。)<br>②：用来作身份验证</p><a id="more"></a><h3 id="3-token主要有两个作用"><a href="#3-token主要有两个作用" class="headerlink" title="3. token主要有两个作用:"></a>3. token主要有两个作用:</h3><hr><p>主要的理念是，客户端初始化的时候，一般就是刚刚进入页面的时候就调用后端代码，后端代码生成一个token,返回给客户端，客户端储存token（可以在前台使用Form表单中使用隐藏域来存储这个Token，也可以使用cookie）,然后就将request(请求)中的token与（session）中的token进行比较;</p><h3 id="4-使用基于-Token-的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的"><a href="#4-使用基于-Token-的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的" class="headerlink" title="4. 使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的:"></a>4. 使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的:</h3><hr><ul><li>客户端使用用户名跟密码请求登录</li><li>服务端收到请求，去验证用户名与密码</li><li>验证成功后，服务端会签发一个 Token，再把这个 Token 发送给客户端</li><li>客户端收到 Token 以后可以把它存储起来，比如放在 Cookie 里或者 Local Storage 里</li><li>客户端每次向服务端请求资源的时候需要带着服务端签发的 Token</li><li>服务端收到请求，然后去验证客户端请求里面带着的 Token，如果验证成功，就向客户端返回请求的数据</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-首先，先了解一下request和session的区别&quot;&gt;&lt;a href=&quot;#1-首先，先了解一下request和session的区别&quot; class=&quot;headerlink&quot; title=&quot;1. 首先，先了解一下request和session的区别&quot;&gt;&lt;/a&gt;1. 首先，先了解一下request和session的区别&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;request 指在一次请求的全过程中有效，即从http请求到服务器处理结束，返回响应的整个过程，存放在HttpServletRequest对象中。在这个过程中可以使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量。request是用户请求访问的当前组件，以及和当前web组件共享同一用户请求的web组件。如：被请求的jsp页面和该页面用&lt;include&gt;指令包含的页面以及&lt;forward&gt;标记包含的其它jsp页面；&lt;br&gt;Session是用户全局变量，在整个会话期间都有效。只要页面不关闭就一直有效（或者直到用户一直未活动导致会话过期，默认session过期时间为30分钟，或调用HttpSession的invalidate()方法）。存放在HttpSession对象中 ，同一个http会话中的web组件共享它。&lt;/forward&gt;&lt;/include&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-token主要有两个作用&quot;&gt;&lt;a href=&quot;#2-token主要有两个作用&quot; class=&quot;headerlink&quot; title=&quot;2. token主要有两个作用:&quot;&gt;&lt;/a&gt;2. token主要有两个作用:&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;①:防止表单重复提交(防止表单重复提交一般还是使用前后端都限制的方式，比如：在前端点击提交之后，将按钮置为灰色，不可再次点击，然后客户端和服务端的token各自独立存储，客户端存储在Cookie或者Form的隐藏域（放在Form隐藏域中的时候，需要每个表单）中，服务端存储在Session（单机系统中可以使用）或者其他缓存系统（分布式系统可以使用）中。)&lt;br&gt;②：用来作身份验证&lt;/p&gt;
    
    </summary>
    
    
      <category term="Token" scheme="https://magnificentsun.github.io/blog/tags/Token/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://magnificentsun.github.io/blog/2019/04/27/hello-world/"/>
    <id>https://magnificentsun.github.io/blog/2019/04/27/hello-world/</id>
    <published>2019-04-27T03:32:51.000Z</published>
    <updated>2019-05-13T08:05:23.432Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://magnificentsun.github.io/blog/tags/hexo/"/>
    
  </entry>
  
</feed>
